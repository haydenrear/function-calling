spring.application.name: function-calling
server.port: 8084
spring:
  session:
    jdbc:
      schema: classpath:db-schema/schema-postgresql.sql
      initialize-schema: always
  docker:
    compose:
      enabled: true
      file: classpath:docker/docker-compose.yml
      lifecycle-management: start_only
      readiness:
        wait: only_if_started
      skip:
        in-tests: false
  jpa:
    hibernate:
      ddl-auto: create
      format_sql: true
    show-sql: true
    database: postgresql
  datasource:
    url: jdbc:postgresql://${PG_HOST:localhost}:5401/postgres
    driver-class-name: org.postgresql.Driver
    username: postgres
    password: postgres
    hikari:
      driver-class-name: org.postgresql.Driver
      username: postgres
      password: postgres
      jdbc-url: jdbc:postgresql://${PG_HOST:localhost}:5401/postgres
  liquibase:
    enabled: false
  cloud:
    zookeeper:
      discovery:
        enabled: false
      enabled: false

code-runner:
  registrations:
    - id: "cdc-agents-test"
      command: "uv"
      working-directory: "/Users/hayde/IdeaProjects/drools/python_parent/packages/cdc_agents"
      arguments: "run cdc-agents-test"
      description: "Test CDC agents"
      enabled: true
      runner-copy-path:
        - file:///Users/hayde/cdc_agents/work
    - id: "run-test-graph-all"
      enabled: true
      command: "/bin/zsh"
      arguments: "all-tests-test-graph.sh"
      working-directory: "/Users/hayde/IdeaProjects/drools"
      description: "Run pipeline for testing commit diff context in unit tests and integration tests in the test graph"
      reporting-paths:
        - file:///Users/hayde/IdeaProjects/drools/commit-diff-context-graphql/build/reports/tests/test/index.html
        - file:///Users/hayde/IdeaProjects/drools/runner-logs/test-report-log.log
        - file:///Users/hayde/IdeaProjects/drools/test_graph/build/reports/tests/test/index.html
      runner-copy-path:
        - file:///Users/hayde/cdc_agents/work



logging.config: classpath:logback.xml
logging:
  level:
    org.springframework.boot: INFO

spring.ai.vectorstore.type: none

endpoints:
  zookeeper:
    enabled: false

otel:
  instrumentation:
    spring-web:
      enabled: false
    spring-webmvc:
      enabled: false
    spring-webflux:
      enabled: false
    jdbc:
      enabled: false
    kafka:
      enabled: false
    mongo:
      enabled: false
management:
  otlp:
    metrics:
      export:
        enabled: false
